apiVersion: v1
kind: Template
metadata:
  name: kafka-builder
  annotations:
    description: Kafka image build template
    openshift.io/display-name: Kafka Image Builder
    iconClass: icon-database
    tags: database,kafka
labels:
  template: kafka-builder
  component: kafka

parameters:
- name: GITHUB_REPOSITORY
  value: "https://github.com/engapa/kafka-k8s-openshift"
  description: Source code respository (Github)
  required: true
- name: GITHUB_REF
  description: Github source ref
  value: "master"
  required: true
- name: GITHUB_HOOK_SECRET
  description: Secret to notify a change from Github.
  value: "secretito"
  required: false
- name: IMAGE_STREAM_NAME
  description:
  value: "kafka"
  required: true
- name: IMAGE_STREAM_VERSION
  description:
  value: "latest"
  required: true
- name: HTTP_PROXY
  description: Any required HTTP Proxy
  value: ""
  required: false
- name: HTTPS_PROXY
  description: Any required HTTPS Proxy
  value: ""
- name: NO_PROXY
  description: Any required NO_PROXY
  value: ""
  required: false

objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${IMAGE_STREAM_NAME}
  spec:
    lookupPolicy:
      local: true

- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: kafka-builder
  spec:
    runPolicy: Serial
    triggers:
      - type: GitHub
        github:
          secret: ${GITHUB_HOOK_SECRET}
      - type: ConfigChange
    source:
      git:
        uri: ${GITHUB_REPOSITORY}
        ref: ${GITHUB_REF}
        httpProxy: ${HTTP_PROXY}
        httpsProxy: ${HTTPS_PROXY}
        noProxy: ${NO_PROXY}
    strategy:
      type: Docker
      dockerStrategy:
        env:
          - name: "HTTP_PROXY"
            value: ${HTTP_PROXY}
          - name: "HTTPS_PROXY"
            value: ${HTTPS_PROXY}
          - name: "NO_PROXY"
            value: ${NO_PROXY}
          - name: "http_proxy"
            value: ${HTTP_PROXY}
          - name: "https_proxy"
            value: ${HTTPS_PROXY}
          - name: "no_proxy"
            value: ${NO_PROXY}

    output:
      to:
        kind: ImageStreamTag
        name: "${IMAGE_STREAM_NAME}:${IMAGE_STREAM_VERSION}"